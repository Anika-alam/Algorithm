1...

#include<stdio.h>
int main()
{
    int a[10][10];
    int i,j,n;
    printf("enter vertex no :");
    scanf("%d",&n);
    printf("enter  graph:");
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    printf("adjacency matrix is")
     for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            printf("%d ",a[i][j]);
        }
        printf("\n");
    }
    return 0;
}


2>...

#include<stdio.h>
#include<iostream>
#include<vector>
using namespace std;

int main()
{
    vector<int> v[10];
    int n,x;
    for(int i=0;i<8;i++)
    {
        scanf("%d",&n);
        for(int j=0;j<n;j++)
        {
            scanf("%d",&x);
            v[i].push_back(x);
        }
    }
    printf("adjacency list is:");

   for(int i=0;i<8;i++)
   {
       printf("%d : ",i);
       int m = v[i].size();
       for(int j=0;j<m;j++)
       {
           printf("%d ",v[i][j]);
       }
       printf("\n");
   }
    return 0;
}


3....


#include<stdio.h>
#include<iostream>
#include<queue>
using namespace std;

void bfs(int v)
{
   queue<int> q;
   int src,w;
   q.push(src);
   int visited[10];
   visited[src] = true;
   int distance[10];
   distance[src] = 0;
   do
   {
       int u = q.front();
       q.pop();
       for(int i=0;i<8;i++)
       {
       int m = v[u].size();
       for(int j=0;j<m;j++)
       {
           if(u != v[i][j])
           {
               q.push(u);
               visited[u] = true;
               distance[u];
              distance = distance[u]+1;
           }

       }
       }
       while()
   }

}
int main()
{
     vector<int> v[10];
    int n,x;
    for(int i=0;i<8;i++)
    {
        scanf("%d",&n);
        for(int j=0;j<n;j++)
        {
            scanf("%d",&x);
            v[i].push_back(x);
        }
    }
   bfs(v);

    return 0;
}
