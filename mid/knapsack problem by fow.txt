#include<stdio.h>
float greedyknapsack(int w[], int v[], int a[],int n)
{
	int i=0;
	float price=0;
	float load=0;
	int W =5;
	while(i<n && load<=W)
	{
		if(w[i]<=W-load)
		{
			printf("item %d fully taken\n",i);
			load=load+w[i];
			price=price+v[i];
		}
		else
		{
			printf("item %d %f kg taken\n",i,float((W-load)/w[i]));
			price=price+float((W-load)*v[i]/w[i]);
		}
		i++;
	}


	return price;

}
void sort(int w[],int v[],int a[],int m)
{
      int c,y,swap;
     for (c = 0 ; c < ( m - 1 ); c++)
  {
    for (y = 0 ; y < m - c - 1; y++)
    {
      if (a[y] < a[y+1])
      {
        swap       = a[y];
        a[y]   = a[y+1];
        a[y+1] = swap;
 swap       = w[y];
        w[y]   = w[y+1];
        w[y+1] = swap;
         swap       = v[y];
        v[y]   = v[y+1];
        v[y+1] = swap;
      }
    }
  }
}

int main()
{
    int w[3]  = {2,4,1};
    int v[3] = {2000,1000,500};
    int a[3];
    int pw;
    int i;
    for(i=0;i<3;i++)
    {
        pw = v[i]/w[i];
        a[i] = pw;
    }
    sort(w,v,a,3);
    int n=3;

	int val=greedyknapsack(w,v,a,n);
	printf("total price :%d \n ",val);
    return 0;
}
